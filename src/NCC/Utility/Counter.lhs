{--------------------------------------------------------------------------------------------------
                                           Cada Compiler                                           
                                       Michael Benjamin Gale                                       
--------------------------------------------------------------------------------------------------}

> module Utility.Counter (
>   Counter,
>   evalCounter,
>   fresh,
>   resetCounter
> ) where

    {----------------------------------------------------------------------}
    {-- Module Imports                                                    -}
    {----------------------------------------------------------------------}
    
>   import Control.Monad.State

>   import Utility.Monad

    {----------------------------------------------------------------------}
    {-- Counters                                                          -}
    {----------------------------------------------------------------------}
    
>   type Counter = State Int

>   evalCounter :: Counter a -> a
>   evalCounter = flip evalState 0

>   fresh :: Counter Int
>   fresh = query succ

>   resetCounter :: Counter ()
>   resetCounter = put 0

{--------------------------------------------------------------------------------------------------
                                            End of File                                            
--------------------------------------------------------------------------------------------------}          
